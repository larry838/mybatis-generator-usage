<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="test.dao.UserDoMapper" >
  <resultMap id="BaseResultMap" type="test.model.UserDo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="loginName" property="loginName" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="skin" property="skin" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmt_create" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="gmt_modified" property="gmt_modified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, loginName, userId, password, userName, skin, status, gmt_create, email, phone, 
    gmt_modified
  </sql>
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer" >
     update user set status = -1,gmt_modified=now()
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="save" parameterType="test.model.UserDo" >
    insert into user (id, loginName, userId, 
      password, userName, skin, 
      status, gmt_create, email, 
      phone, gmt_modified)
    values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{skin,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{gmt_create,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{gmt_modified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="test.model.UserDo" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        loginName,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="skin != null" >
        skin,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="gmt_create != null" >
        gmt_create,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="gmt_modified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="skin != null" >
        #{skin,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="gmt_create != null" >
        #{gmt_create,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gmt_modified != null" >
        #{gmt_modified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="test.model.UserDo" >
    update user
    <set >
      <if test="loginName != null" >
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="skin != null" >
        skin = #{skin,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="gmt_create != null" >
        gmt_create = #{gmt_create,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gmt_modified != null" >
        gmt_modified = #{gmt_modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="update" parameterType="map" >
    update user
    <set >
      <if test="loginName != null" >
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="skin != null" >
        skin = #{skin,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
  </update>
</mapper>